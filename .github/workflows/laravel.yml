name: Laravel CI/CD

on:
  push:
    branches: [ main ]

jobs:
  laravel-tests:
    name: CI
    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.0'
    - uses: actions/checkout@v2
    - name: Copiando o  .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Instalando Dependencias
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Gerando a Key
      run: php artisan key:generate
    - name: Ajustando Permiss√µes #Ô∏è‚É£
      run: chmod -R 777 storage bootstrap/cache
    - name: Criando Banco para Testes ‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Executando Testes
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
    - name: Psalm Security Scan
      uses: docker://ghcr.io/psalm/psalm-security-scan
      with:
        security_analysis: true
        report_file: results.sarif
    - name: Upload Security Analysis results to GitHub
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif

  laravel-deployment:
    name: CD
    needs: laravel-tests
    runs-on: ubuntu-latest
    env:
      USER_PASS:  "${{ secrets.USER_PASS }}"
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main

      - name: Deployando
        uses: easingthemes/ssh-deploy@v2.2.11
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO --exclude .git --exclude .docker --exclude .github"
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USER }}
          TARGET: /home/${{ secrets.SSH_USER }}/ci-cd

      - name: Executando comandos SSH üöÄ
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: USER_PASS DB_NAME DB_PASS DB_USER
          script: |
            script: |
            cd ci-cd/
            echo $USER_PASS | sudo -S docker-compose up -d
            echo $USER_PASS | sudo -S ./config.sh "Aplicativo Teste" "http://paozinhoja.com.br" mysql $DB_NAME $DB_USER $DB_PASS
            echo $USER_PASS | sudo -S docker-compose exec -T curso_api_cache composer install
            echo $USER_PASS | sudo -S docker-compose exec -T curso_api_cache php artisan migrate --force





